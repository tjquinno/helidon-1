<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2019, 2020 Oracle and/or its affiliates.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.helidon.microprofile</groupId>
        <artifactId>helidon-microprofile-project</artifactId>
        <version>2.1.1-SNAPSHOT</version>
    </parent>
    <groupId>io.helidon.microprofile.openapi</groupId>
    <artifactId>helidon-microprofile-openapi</artifactId>
    
    <name>Helidon Microprofile OpenAPI</name>

    <description>
        Helidon Microprofile OpenAPI implementation
    </description>

    <packaging>jar</packaging>
    
    <properties>
        <spotbugs.exclude>etc/spotbugs/exclude.xml</spotbugs.exclude>
    </properties>
    
    <build>
        <plugins>
            <plugin>
                <!--
                    Used for the BasicServerTest.
                -->
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-test-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <classesDir>${project.build.directory}/test-classes</classesDir>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/test-classes</directory>
                                    <excludes>
                                        <exclude>**/other/*.class</exclude>
                                    </excludes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-second-test-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <classesDir>${project.build.directory}/test-classes</classesDir>
                            <indexName>other.idx</indexName>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/test-classes</directory>
                                    <includes>
                                        <include>**/other/*.class</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                    Used for checking that vetoed resources are ignored when the Jandex index is being ignored.
                    (The OpenAPI code we layer on itself correctly ignores vetoed beans; we need to test that our
                    internal scanning - used when there is no index - does so also.
                -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.plugin.surefire}</version>
                <executions>
                    <execution>
                        <id>test-vetoed-bean-with-internal-scan</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/TestVetoedResource.java</include>
                            </includes>
                            <systemPropertyVariables>
                                <io.helidon.openapi.ignore-external-indexes>true</io.helidon.openapi.ignore-external-indexes>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <!--
                            Exclude the veto test when we let SmallRye use the Jandex index (the default), because
                            SmallRye uses the index directly without going through CDI. The addition of the vetoing
                            CDI extension therefore has no effect on what SmallRye sees.
                        -->
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/TestVetoedResource.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.server</groupId>
            <artifactId>helidon-microprofile-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.helidon.openapi</groupId>
            <artifactId>helidon-openapi</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.interceptor</groupId>
            <artifactId>jakarta.interceptor-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.helidon.microprofile.tests</groupId>
            <artifactId>helidon-microprofile-tests-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
</project>
